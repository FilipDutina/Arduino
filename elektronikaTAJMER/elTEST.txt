#include <avr/io.h>
#include <avr/interrupt.h>

const unsigned char simboli[] = {
		0xc5, 0x26, 0xc4, 0xdd, 0xa6, 0x26, 0xff, 0x8c, 0x5, 0xc4, 0xff, 0xc5, 0x5, 0xc, 0xff, 0xff, 0xff, 0xff, 0x00	//jedite kod joa
}; //look-up tabela sa simbolima
const unsigned char simboli1[] = {
		0xc, 0x2e, 0xee, 0xdd, 0x27, 0x8c, 0xc, 0xff, 0x34, 0xa7, 0xc5, 0xdd, 0xe5, 0xc, 0xff, 0xfe, 0xff, 0xec, 0x26, 0xff, 0xe, 0xc, 0xc4, 0xc, 0xff, 0xff, 0xff, 0xff, 0x00};	//africka sljiva - ne pada
unsigned char DISP_BAFER[4] = {
		0xfe, 0xfe, 0xfe, 0xfe
}; //bafer displeja
unsigned long millis = 0;
unsigned char disp = 3;
unsigned char j = 0;
unsigned char a = 15;
int smer = 0;
int ukljuceno = 0;
ISR(TIMER0_COMPA_vect)
{
	//prekid tajmera 0 usled dostizanja vrednosti registra OCR0A
	if (++disp > 3)
		disp = 0;
	PORTB = ~(1 << (3-disp)); //ukljucenje tranzistora
	PORTD = DISP_BAFER[disp]; //ispis na trenutno aktivan displej
	millis++; //sistemsko vreme
}
ISR(PCINT1_vect)
{
	//prekid usled promene stanja pina PCINT10 ili pina PCINT8
	switch ((~PINC) & 0xf)
	{
	case 0x01: //pritisnut donji taster
		{
			smer = 1;
			//j = 0;
			break;
		}
	case 0x02: //pritisnut donji taster
	{
		ukljuceno = 1;
		//j = 0;
		break;
	}
	case 0x04: //pritisnut donji taster
					{
						smer = 2;
						//j = 0;
						break;
					}
	case 0x08:	//pritisnut gornji taster
	{
		ukljuceno = 2;
		//j = 0;
		break;
	}

	}
}

int main()
{
	unsigned long t0;
	unsigned char i;

	//inicijalizacija portova:
	DDRB = 0x0f; //PB3-PB0 -> izlazi
	DDRC = 0x00; //port C -> ulaz
	DDRD = 0xff; //port D -> izlaz
	//inicijalizacija tajmera 0:
	PCICR = (1 << PCIE1); //dozvola prekida usled promene stanja; isto sto i PCICR = 0x02;
	PCMSK1 = 0xf; //pina PCINT10, ili pina PCINT8
	TCCR0A = 0x02; //tajmer 0: CTC mod
	TCCR0B = 0x03; //tajmer 0: fclk = fosc/64
	OCR0A = 249; //perioda tajmera 0: 250 Tclk (OCR0A + 1 = 250)
	TIMSK0 = 0x02; //dozvola prekida tajmera 0
	//usled dostizanja vrednosti registra OCR0A
	sei(); //I = 1 (dozvola prekida)

	while(1)
	{
		t0 = millis;

		while ((millis - t0) < 500); //pauza 500ms
		if(ukljuceno == 1 && smer == 1)
		{
			for (i = 0; i < 4; i++)
			{
				if(j == 0)
				{
					DISP_BAFER[3] = simboli[0];
					DISP_BAFER[2] = 0xff;
					DISP_BAFER[1] = 0xff;
					DISP_BAFER[0] = 0xff;
				}
				else if(j == 1)
				{
					DISP_BAFER[3] = simboli[1];
					DISP_BAFER[2] = simboli[0];
					DISP_BAFER[1] = 0xff;
					DISP_BAFER[0] = 0xff;
				}
				else if(j == 2)
				{
					DISP_BAFER[3] = simboli[2];
					DISP_BAFER[2] = simboli[1];
					DISP_BAFER[1] = simboli[0];
					DISP_BAFER[0] = 0xff;
				}
				else if(j == 3)
				{
					DISP_BAFER[3] = simboli[3];
					DISP_BAFER[2] = simboli[2];
					DISP_BAFER[1] = simboli[1];
					DISP_BAFER[0] = simboli[0];
				}
				else
					DISP_BAFER[i] = simboli[j+i];
			}
			j++;
			if(j == 15)
				j = 0;
		}
		else if(ukljuceno == 1 && smer == 2)
				{
					//j = 15;
					//for (i = 4; i > 0; i--)
					//{
						if(a == 15)
						{
							DISP_BAFER[0] = simboli[15];
							DISP_BAFER[1] = 0xff;
							DISP_BAFER[2] = 0xff;
							DISP_BAFER[3] = 0xff;
						}
						else if(a == 14)
						{
							DISP_BAFER[0] = simboli[14];
							DISP_BAFER[1] = simboli[15];
							DISP_BAFER[2] = 0xff;
							DISP_BAFER[3] = 0xff;
						}
						else if(a == 13)
						{
							DISP_BAFER[0] = simboli[13];
							DISP_BAFER[1] = simboli[14];
							DISP_BAFER[2] = simboli[15];
							DISP_BAFER[3] = 0xff;
						}
						else if(a == 12)
						{
							DISP_BAFER[0] = simboli[12];
							DISP_BAFER[1] = simboli[13];
							DISP_BAFER[2] = simboli[14];
							DISP_BAFER[3] = simboli[15];
						}

						else if(a == 11)
												{
													DISP_BAFER[0] = simboli[11];
													DISP_BAFER[1] = simboli[12];
													DISP_BAFER[2] = simboli[13];
													DISP_BAFER[3] = simboli[14];
												}
						else if(a == 10)
																		{
																			DISP_BAFER[0] = simboli[10];
																			DISP_BAFER[1] = simboli[11];
																			DISP_BAFER[2] = simboli[12];
																			DISP_BAFER[3] = simboli[13];
																		}
						else if(a == 9)
																		{
																			DISP_BAFER[0] = simboli[9];
																			DISP_BAFER[1] = simboli[10];
																			DISP_BAFER[2] = simboli[11];
																			DISP_BAFER[3] = simboli[12];
																		}
						else if(a == 8)
						{
							DISP_BAFER[0] = simboli[8];
							DISP_BAFER[1] = simboli[9];
							DISP_BAFER[2] = simboli[10];
							DISP_BAFER[3] = simboli[11];
						}
						else if(a == 7)
				{
					DISP_BAFER[0] = simboli[7];
					DISP_BAFER[1] = simboli[8];
					DISP_BAFER[2] = simboli[9];
					DISP_BAFER[3] = simboli[10];
				}
						else if(a == 6)
								{
									DISP_BAFER[0] = simboli[6];
									DISP_BAFER[1] = simboli[7];
									DISP_BAFER[2] = simboli[8];
									DISP_BAFER[3] = simboli[9];
								}
						else if(a == 5)
								{
									DISP_BAFER[0] = simboli[5];
									DISP_BAFER[1] = simboli[6];
									DISP_BAFER[2] = simboli[7];
									DISP_BAFER[3] = simboli[8];
								}
						else if(a == 4)
														{
															DISP_BAFER[0] = simboli[4];
															DISP_BAFER[1] = simboli[5];
															DISP_BAFER[2] = simboli[6];
															DISP_BAFER[3] = simboli[7];
														}
						else if(a == 3)
														{
															DISP_BAFER[0] = simboli[3];
															DISP_BAFER[1] = simboli[4];
															DISP_BAFER[2] = simboli[5];
															DISP_BAFER[3] = simboli[6];
														}
						else if(a == 2)
														{
															DISP_BAFER[0] = simboli[2];
															DISP_BAFER[1] = simboli[3];
															DISP_BAFER[2] = simboli[4];
															DISP_BAFER[3] = simboli[5];
														}
						else if(a == 1)
														{
															DISP_BAFER[0] = simboli[1];
															DISP_BAFER[1] = simboli[2];
															DISP_BAFER[2] = simboli[3];
															DISP_BAFER[3] = simboli[4];
														}
						else if(a == 0)
																				{
																					DISP_BAFER[0] = simboli[0];
																					DISP_BAFER[1] = simboli[1];
																					DISP_BAFER[2] = simboli[2];
																					DISP_BAFER[3] = simboli[3];
																				}
					a--;
					if(a == -1)
						a = 15;
				//}
				}
		else if(ukljuceno == 2)
		{
			for (i = 0; i < 4; i++)
			{
				if(j == 0)
				{
					DISP_BAFER[3] = simboli1[0];
					DISP_BAFER[2] = 0xff;
					DISP_BAFER[1] = 0xff;
					DISP_BAFER[0] = 0xff;
				}
				else if(j == 1)
				{
					DISP_BAFER[3] = simboli1[1];
					DISP_BAFER[2] = simboli1[0];
					DISP_BAFER[1] = 0xff;
					DISP_BAFER[0] = 0xff;
				}
				else if(j == 2)
				{
					DISP_BAFER[3] = simboli1[2];
					DISP_BAFER[2] = simboli1[1];
					DISP_BAFER[1] = simboli1[0];
					DISP_BAFER[0] = 0xff;
				}
				else if(j == 3)
				{
					DISP_BAFER[3] = simboli1[3];
					DISP_BAFER[2] = simboli1[2];
					DISP_BAFER[1] = simboli1[1];
					DISP_BAFER[0] = simboli1[0];
				}
				else
					DISP_BAFER[i] = simboli1[j+i];
			}
			j++;
			if(j == 25)
				j = 0;
		}

	}
	return 0;
}
